

================================================================
== Vitis HLS Report for 'matrix_mult'
================================================================
* Date:           Sun Sep 19 18:33:44 2021

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
* Project:        matrix_mult_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.610 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      258|      258|  1.290 us|  1.290 us|  259|  259|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_Col_Product  |      256|      256|         9|          2|          1|   125|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 2, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.45>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 12 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 13 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 14 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 15 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 16 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten15 = alloca i32 1"   --->   Operation 17 'alloca' 'indvar_flatten15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 18 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %a, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %a"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %b, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %b"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %prod, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %prod"   --->   Operation 24 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln10 = store i7 0, i7 %indvar_flatten15" [matrix_mult.cpp:10]   --->   Operation 25 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln10 = store i3 0, i3 %i" [matrix_mult.cpp:10]   --->   Operation 26 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln10 = store i6 0, i6 %indvar_flatten" [matrix_mult.cpp:10]   --->   Operation 27 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln10 = store i3 0, i3 %j" [matrix_mult.cpp:10]   --->   Operation 28 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (1.58ns)   --->   "%store_ln10 = store i3 0, i3 %k" [matrix_mult.cpp:10]   --->   Operation 29 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 30 [1/1] (1.58ns)   --->   "%store_ln10 = store i16 0, i16 %empty" [matrix_mult.cpp:10]   --->   Operation 30 'store' 'store_ln10' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln10 = br void" [matrix_mult.cpp:10]   --->   Operation 31 'br' 'br_ln10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%indvar_flatten15_load = load i7 %indvar_flatten15" [matrix_mult.cpp:10]   --->   Operation 32 'load' 'indvar_flatten15_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (1.48ns)   --->   "%icmp_ln10 = icmp_eq  i7 %indvar_flatten15_load, i7 125" [matrix_mult.cpp:10]   --->   Operation 33 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.87ns)   --->   "%add_ln10_1 = add i7 %indvar_flatten15_load, i7 1" [matrix_mult.cpp:10]   --->   Operation 34 'add' 'add_ln10_1' <Predicate = true> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %icmp_ln10, void %.split4, void" [matrix_mult.cpp:10]   --->   Operation 35 'br' 'br_ln10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%k_load = load i3 %k" [matrix_mult.cpp:15]   --->   Operation 36 'load' 'k_load' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%indvar_flatten_load_1 = load i6 %indvar_flatten" [matrix_mult.cpp:12]   --->   Operation 37 'load' 'indvar_flatten_load_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%i_load = load i3 %i" [matrix_mult.cpp:10]   --->   Operation 38 'load' 'i_load' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.65ns)   --->   "%add_ln10 = add i3 %i_load, i3 1" [matrix_mult.cpp:10]   --->   Operation 39 'add' 'add_ln10' <Predicate = (!icmp_ln10)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.42ns)   --->   "%icmp_ln12 = icmp_eq  i6 %indvar_flatten_load_1, i6 25" [matrix_mult.cpp:12]   --->   Operation 40 'icmp' 'icmp_ln12' <Predicate = (!icmp_ln10)> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.98ns)   --->   "%select_ln10_1 = select i1 %icmp_ln12, i3 %add_ln10, i3 %i_load" [matrix_mult.cpp:10]   --->   Operation 41 'select' 'select_ln10_1' <Predicate = (!icmp_ln10)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node and_ln10)   --->   "%xor_ln10 = xor i1 %icmp_ln12, i1 1" [matrix_mult.cpp:10]   --->   Operation 42 'xor' 'xor_ln10' <Predicate = (!icmp_ln10)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (1.13ns)   --->   "%icmp_ln15 = icmp_eq  i3 %k_load, i3 5" [matrix_mult.cpp:15]   --->   Operation 43 'icmp' 'icmp_ln15' <Predicate = (!icmp_ln10)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln10 = and i1 %icmp_ln15, i1 %xor_ln10" [matrix_mult.cpp:10]   --->   Operation 44 'and' 'and_ln10' <Predicate = (!icmp_ln10)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.97ns)   --->   "%or_ln12 = or i1 %and_ln10, i1 %icmp_ln12" [matrix_mult.cpp:12]   --->   Operation 45 'or' 'or_ln12' <Predicate = (!icmp_ln10)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i6 %indvar_flatten" [matrix_mult.cpp:12]   --->   Operation 46 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (1.82ns)   --->   "%add_ln12_1 = add i6 %indvar_flatten_load, i6 1" [matrix_mult.cpp:12]   --->   Operation 47 'add' 'add_ln12_1' <Predicate = (!icmp_ln10)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln10 = store i7 %add_ln10_1, i7 %indvar_flatten15" [matrix_mult.cpp:10]   --->   Operation 48 'store' 'store_ln10' <Predicate = (!icmp_ln10)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.61>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%j_load = load i3 %j" [matrix_mult.cpp:10]   --->   Operation 49 'load' 'j_load' <Predicate = (!icmp_ln10 & !icmp_ln12)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.98ns)   --->   "%select_ln10 = select i1 %icmp_ln12, i3 0, i3 %j_load" [matrix_mult.cpp:10]   --->   Operation 50 'select' 'select_ln10' <Predicate = (!icmp_ln10)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i3 %select_ln10_1" [matrix_mult.cpp:16]   --->   Operation 51 'zext' 'zext_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %select_ln10_1, i2 0" [matrix_mult.cpp:16]   --->   Operation 52 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.78ns)   --->   "%add_ln16_1 = add i5 %tmp, i5 %zext_ln16" [matrix_mult.cpp:16]   --->   Operation 53 'add' 'add_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.65ns)   --->   "%add_ln12 = add i3 %select_ln10, i3 1" [matrix_mult.cpp:12]   --->   Operation 54 'add' 'add_ln12' <Predicate = (!icmp_ln10 & and_ln10)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.98ns)   --->   "%select_ln12 = select i1 %or_ln12, i3 0, i3 %k_load" [matrix_mult.cpp:12]   --->   Operation 55 'select' 'select_ln12' <Predicate = (!icmp_ln10)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.98ns)   --->   "%select_ln12_2 = select i1 %and_ln10, i3 %add_ln12, i3 %select_ln10" [matrix_mult.cpp:12]   --->   Operation 56 'select' 'select_ln12_2' <Predicate = (!icmp_ln10)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln16_1 = zext i3 %select_ln12" [matrix_mult.cpp:16]   --->   Operation 57 'zext' 'zext_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.78ns)   --->   "%add_ln16_2 = add i5 %add_ln16_1, i5 %zext_ln16_1" [matrix_mult.cpp:16]   --->   Operation 58 'add' 'add_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.18ns)   --->   "%select_ln12_3 = select i1 %icmp_ln12, i6 1, i6 %add_ln12_1" [matrix_mult.cpp:12]   --->   Operation 59 'select' 'select_ln12_3' <Predicate = (!icmp_ln10)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (1.58ns)   --->   "%store_ln10 = store i3 %select_ln10_1, i3 %i" [matrix_mult.cpp:10]   --->   Operation 60 'store' 'store_ln10' <Predicate = (!icmp_ln10)> <Delay = 1.58>
ST_2 : Operation 61 [1/1] (1.58ns)   --->   "%store_ln12 = store i6 %select_ln12_3, i6 %indvar_flatten" [matrix_mult.cpp:12]   --->   Operation 61 'store' 'store_ln12' <Predicate = (!icmp_ln10)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 3.40>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i3 %select_ln12_2" [matrix_mult.cpp:13]   --->   Operation 62 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (1.78ns)   --->   "%add_ln13 = add i5 %add_ln16_1, i5 %zext_ln13" [matrix_mult.cpp:13]   --->   Operation 63 'add' 'add_ln13' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln16_2 = zext i5 %add_ln16_2" [matrix_mult.cpp:16]   --->   Operation 64 'zext' 'zext_ln16_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%a_addr = getelementptr i8 %a, i64 0, i64 %zext_ln16_2" [matrix_mult.cpp:16]   --->   Operation 65 'getelementptr' 'a_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %select_ln12, i2 0" [matrix_mult.cpp:16]   --->   Operation 66 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_3 = add i5 %zext_ln16_1, i5 %tmp_1" [matrix_mult.cpp:16]   --->   Operation 67 'add' 'add_ln16_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 68 [1/1] (3.40ns) (root node of TernaryAdder)   --->   "%add_ln16_4 = add i5 %add_ln16_3, i5 %zext_ln13" [matrix_mult.cpp:16]   --->   Operation 68 'add' 'add_ln16_4' <Predicate = true> <Delay = 3.40> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.70> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 69 [2/2] (2.32ns)   --->   "%a_load = load i5 %a_addr" [matrix_mult.cpp:16]   --->   Operation 69 'load' 'a_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>
ST_3 : Operation 70 [1/1] (1.65ns)   --->   "%add_ln15 = add i3 %select_ln12, i3 1" [matrix_mult.cpp:15]   --->   Operation 70 'add' 'add_ln15' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (1.13ns)   --->   "%icmp_ln15_1 = icmp_eq  i3 %add_ln15, i3 5" [matrix_mult.cpp:15]   --->   Operation 71 'icmp' 'icmp_ln15_1' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln15 = br i1 %icmp_ln15_1, void %ifFalse, void %ifTrue" [matrix_mult.cpp:15]   --->   Operation 72 'br' 'br_ln15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (1.58ns)   --->   "%store_ln12 = store i3 %select_ln12_2, i3 %j" [matrix_mult.cpp:12]   --->   Operation 73 'store' 'store_ln12' <Predicate = true> <Delay = 1.58>
ST_3 : Operation 74 [1/1] (1.58ns)   --->   "%store_ln15 = store i3 %add_ln15, i3 %k" [matrix_mult.cpp:15]   --->   Operation 74 'store' 'store_ln15' <Predicate = true> <Delay = 1.58>

State 4 <SV = 3> <Delay = 2.32>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln16_3 = zext i5 %add_ln16_4" [matrix_mult.cpp:16]   --->   Operation 75 'zext' 'zext_ln16_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%b_addr = getelementptr i8 %b, i64 0, i64 %zext_ln16_3" [matrix_mult.cpp:16]   --->   Operation 76 'getelementptr' 'b_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/2] (2.32ns)   --->   "%a_load = load i5 %a_addr" [matrix_mult.cpp:16]   --->   Operation 77 'load' 'a_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>
ST_4 : Operation 78 [2/2] (2.32ns)   --->   "%b_load = load i5 %b_addr" [matrix_mult.cpp:16]   --->   Operation 78 'load' 'b_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>

State 5 <SV = 4> <Delay = 3.37>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln16 = sext i8 %a_load" [matrix_mult.cpp:16]   --->   Operation 79 'sext' 'sext_ln16' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/2] (2.32ns)   --->   "%b_load = load i5 %b_addr" [matrix_mult.cpp:16]   --->   Operation 80 'load' 'b_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 25> <RAM>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%sext_ln16_1 = sext i8 %b_load" [matrix_mult.cpp:16]   --->   Operation 81 'sext' 'sext_ln16_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [3/3] (1.05ns) (grouped into DSP with root node add_ln16)   --->   "%mul_ln16 = mul i16 %sext_ln16_1, i16 %sext_ln16" [matrix_mult.cpp:16]   --->   Operation 82 'mul' 'mul_ln16' <Predicate = true> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 1.05>
ST_6 : Operation 83 [2/3] (1.05ns) (grouped into DSP with root node add_ln16)   --->   "%mul_ln16 = mul i16 %sext_ln16_1, i16 %sext_ln16" [matrix_mult.cpp:16]   --->   Operation 83 'mul' 'mul_ln16' <Predicate = true> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 2.90>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%p_load = load i16 %empty" [matrix_mult.cpp:12]   --->   Operation 84 'load' 'p_load' <Predicate = (!or_ln12)> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (0.80ns)   --->   "%select_ln12_1 = select i1 %or_ln12, i16 0, i16 %p_load" [matrix_mult.cpp:12]   --->   Operation 85 'select' 'select_ln12_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 86 [1/3] (0.00ns) (grouped into DSP with root node add_ln16)   --->   "%mul_ln16 = mul i16 %sext_ln16_1, i16 %sext_ln16" [matrix_mult.cpp:16]   --->   Operation 86 'mul' 'mul_ln16' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 87 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln16 = add i16 %mul_ln16, i16 %select_ln12_1" [matrix_mult.cpp:16]   --->   Operation 87 'add' 'add_ln16' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 100 [1/1] (0.00ns)   --->   "%ret_ln21 = ret" [matrix_mult.cpp:21]   --->   Operation 100 'ret' 'ret_ln21' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 2.10>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Row_Col_Product_str"   --->   Operation 88 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%empty_6 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 125, i64 125, i64 125"   --->   Operation 89 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Col_Product_str"   --->   Operation 90 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i5 %add_ln13" [matrix_mult.cpp:13]   --->   Operation 91 'zext' 'zext_ln13_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%prod_addr = getelementptr i16 %prod, i64 0, i64 %zext_ln13_1" [matrix_mult.cpp:13]   --->   Operation 92 'getelementptr' 'prod_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%specpipeline_ln15 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [matrix_mult.cpp:15]   --->   Operation 93 'specpipeline' 'specpipeline_ln15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%specloopname_ln15 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [matrix_mult.cpp:15]   --->   Operation 94 'specloopname' 'specloopname_ln15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 95 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln16 = add i16 %mul_ln16, i16 %select_ln12_1" [matrix_mult.cpp:16]   --->   Operation 95 'add' 'add_ln16' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 9 <SV = 8> <Delay = 2.32>
ST_9 : Operation 96 [1/1] (2.32ns)   --->   "%store_ln16 = store i16 %add_ln16, i5 %prod_addr" [matrix_mult.cpp:16]   --->   Operation 96 'store' 'store_ln16' <Predicate = (icmp_ln15_1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 25> <RAM>
ST_9 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln0 = br void %ifFalse"   --->   Operation 97 'br' 'br_ln0' <Predicate = (icmp_ln15_1)> <Delay = 0.00>
ST_9 : Operation 98 [1/1] (1.58ns)   --->   "%store_ln16 = store i16 %add_ln16, i16 %empty" [matrix_mult.cpp:16]   --->   Operation 98 'store' 'store_ln16' <Predicate = true> <Delay = 1.58>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 99 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 3.46ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten15') [9]  (0 ns)
	'load' operation ('indvar_flatten15_load', matrix_mult.cpp:10) on local variable 'indvar_flatten15' [25]  (0 ns)
	'add' operation ('add_ln10_1', matrix_mult.cpp:10) [27]  (1.87 ns)
	'store' operation ('store_ln10', matrix_mult.cpp:10) of variable 'add_ln10_1', matrix_mult.cpp:10 on local variable 'indvar_flatten15' [84]  (1.59 ns)

 <State 2>: 3.61ns
The critical path consists of the following:
	'load' operation ('j_load', matrix_mult.cpp:10) on local variable 'j' [32]  (0 ns)
	'select' operation ('select_ln10', matrix_mult.cpp:10) [39]  (0.98 ns)
	'add' operation ('add_ln12', matrix_mult.cpp:12) [47]  (1.65 ns)
	'select' operation ('select_ln12_2', matrix_mult.cpp:12) [52]  (0.98 ns)

 <State 3>: 3.4ns
The critical path consists of the following:
	'add' operation ('add_ln16_4', matrix_mult.cpp:16) [63]  (3.4 ns)

 <State 4>: 2.32ns
The critical path consists of the following:
	'load' operation ('a_load', matrix_mult.cpp:16) on array 'a' [68]  (2.32 ns)

 <State 5>: 3.37ns
The critical path consists of the following:
	'load' operation ('b_load', matrix_mult.cpp:16) on array 'b' [70]  (2.32 ns)
	'mul' operation of DSP[73] ('mul_ln16', matrix_mult.cpp:16) [72]  (1.05 ns)

 <State 6>: 1.05ns
The critical path consists of the following:
	'mul' operation of DSP[73] ('mul_ln16', matrix_mult.cpp:16) [72]  (1.05 ns)

 <State 7>: 2.91ns
The critical path consists of the following:
	'load' operation ('p_load', matrix_mult.cpp:12) on local variable 'empty' [30]  (0 ns)
	'select' operation ('select_ln12_1', matrix_mult.cpp:12) [51]  (0.805 ns)
	'add' operation of DSP[73] ('add_ln16', matrix_mult.cpp:16) [73]  (2.1 ns)

 <State 8>: 2.1ns
The critical path consists of the following:
	'add' operation of DSP[73] ('add_ln16', matrix_mult.cpp:16) [73]  (2.1 ns)

 <State 9>: 2.32ns
The critical path consists of the following:
	'store' operation ('store_ln16', matrix_mult.cpp:16) of variable 'add_ln16', matrix_mult.cpp:16 on array 'prod' [78]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
